name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11, 3.12]
        extra: ['', 'tools']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install tox

      - name: Run format-check
        run: tox -e format-check
      - name: Install package with extras
        run: |
          if [ -z "${{ matrix.extra }}" ]; then
            pip install .
          else
            pip install ".[${{ matrix.extra }}]"
          fi

      - name: Run tests
        run: tox
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          GROK_API_KEY: ${{ secrets.GROK_API_KEY }}

  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    needs: test

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: pip install build twine

      - name: Build
        run: python -m build

      - name: Publish to pypi
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --repository pypi dist/*
